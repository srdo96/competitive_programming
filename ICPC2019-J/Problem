 
J. Good Things Come to Those Who Wait

Score: 1

CPU: 1s
Memory: 1500MB

Finding divisors of an integer is common task. We all did it in some time or other during our programming courses. We know that there are several ways to find divisors of an integer N. All of them involve some kind of programming using loops. But what if we ask you to solve the reverse problem?

Given all the proper (all the divisors except 1 and N) positive divisors of a positive composite integer N, you need to find the value of N.

Input

The first line of the input contains an integer T (0 < T < 11), denoting the number of test cases. The next T lines will contain the test cases. For each test case an integer K (K > 0) will be given which is the number of proper positive divisors of N. The following line will consist of K integers. These are all the proper positive divisors of N. You should assume that the divisors will be given in such a way so that the value of N will always be greater than 1 and less than or equal to 1012.

Output

For each test case, print a single line in the format “Case X: N” (without the quotes) where X denotes the case number and N is the answer. Refer to the sample input/output for more clarity on the format.

Sample
Input	   Output
3          Case 1: 8
2          Case 2: 9
2 4        Case 3: 10
1
3
2
5 2
	


